name: Test and Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Validate HTML
      run: npm run validate:html
      
    - name: Run unit tests with coverage
      run: npm run test:coverage
      
    - name: Run accessibility tests
      run: npm run test:accessibility
      
    - name: Run SEO tests
      run: npm run test:seo
      
    - name: Run link validation tests
      run: npm run test:links
      
    - name: Build project
      run: npm run build
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
      
    - name: Run Lighthouse CI
      run: npm run lighthouse
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        
    - name: Validate built links
      run: npm run validate:links
      
    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          test-report.json
          coverage/
          .lighthouseci/
          
  accessibility-audit:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Install Playwright
      run: npx playwright install --with-deps chromium
      
    - name: Run comprehensive accessibility audit
      run: |
        npx serve -s dist -p 3000 &
        sleep 5
        npx axe-cli http://localhost:3000 --exit
        
  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run npm audit
      run: npm audit --audit-level moderate
      
    - name: Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      if: false # Disable for now, enable when needed
      with:
        sarif-file: 'security-scan-results.sarif'
        
  deploy-preview:
    runs-on: ubuntu-latest
    needs: [test, accessibility-audit]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Deploy to Firebase Preview
      run: npm run firebase:deploy:preview
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        
  deploy-production:
    runs-on: ubuntu-latest
    needs: [test, accessibility-audit, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run final test suite
      run: node scripts/run-all-tests.js
      
    - name: Deploy to Firebase Production
      run: npm run firebase:deploy
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        
    - name: Post-deployment verification
      run: |
        sleep 30
        curl -f https://cin-foundation.org || exit 1
        npx lighthouse https://cin-foundation.org --only-categories=performance,accessibility,best-practices,seo --chrome-flags="--headless" --output=json --output-path=./post-deploy-lighthouse.json
        
    - name: Upload post-deployment artifacts
      uses: actions/upload-artifact@v3
      with:
        name: post-deployment-results
        path: |
          post-deploy-lighthouse.json
          test-report.json